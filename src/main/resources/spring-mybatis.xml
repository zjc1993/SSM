<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
    <!--配置整合mybatis步骤-->

    <!--1.配置数据库连接相关参数-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--2.配置数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--驱动属性-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <!--基本属性-->
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--c3p0独有属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <property name="autoCommitOnClose" value="false"/>

        <property name="checkoutTimeout" value="1000"/>
        <property name="acquireRetryAttempts" value="5"/>
    </bean>
    <!--3.注册sqlsessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入Datasource-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis全局配置文件:mybatis-config.xml
            指定Mybatis的配置文件位置。如果指定了该属性，
            那么会以该配置文件的内容作为配置信息构建对应的SqlSessionFactoryBuilder，
            但是后续属性指定的内容会覆盖该配置文件里面指定的对应内容-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--扫描entity包,使用别名,多个用;隔开
            一般对应实体类所在的包，这个时候会自动取对应包中不包括包名的简单类名作为包括包名的别名。
            多个package之间可以用逗号或者分号等来进行分隔。(value的值一定要是包的全名)-->
        <property name="typeAliasesPackage" value="com.SSM.domain"/>
        <property name="mapperLocations" value="classpath*:com/SSM/mapper/*Mapper.xml"/>
    </bean>
    <!--4.配置扫描Dao接口包,动态实现DAO接口,注入到spring容器-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--需要扫描的dao接口-->
        <property name="basePackage" value="com.SSM.dao"/>
    </bean>
</beans>
